
public class INSERTION_SORT {
	public static void main(String[] args){
		long start=System.nanoTime();
		int array[] = {120,215,215,41,271,252,130,288,99,139,149,202,215,28,99,260,193,50,208,281,140,174,105,219,87,73,137,51,43,261,50,0,141,201,299,145,29,240,280,265,175,109,155,211,32,165,150,86,204,1,23,28,263,243,17,19,281,199,265,267,182,154,231,178,226,249,237,231,117,257,110,10,144,199,292,218,165,176,224,207,283,184,19,279,66,225,2,116,61,210,72,170,214,132,159,234,79,27,6,226,156,50,294,0,185,249,228,290,1,281,111,9,270,233,36,198,23,48,169,228,9,37,4,278,146,277,250,178,158,29,222,130,133,103,108,10,5,209,119,298,220,283,247,198,5,159,216,134,176,88,126,117,160,38,287,230,271,123,290,293,28,103,127,164,177,180,292,25,59,191,256,80,50,218,240,125,109,120,215,11,260,48,80,234,64,185,10,201,259,248,110,0,83,154,140,93,126,37,291,17,145,291,192,288,296,199,180,288,148,266,297,184,196,13,216,39,108,226,189,274,126,47,32,92,47,30,291,125,56,217,69,106,170,192,38,0,143,17,225,110,174,56,106,281,69,73,151,294,232,219,298,195,69,79,186,256,252,76,220,81,294,209,198,192,99,36,37,116,32,27,253,284,234,52,202,205,170,29,254,36,203,251,287,107,88,287,211,254,282,260,162,146,4,294,223,260,268,172,215,221};
		for(int i = 0;i < array.length;i++){
			System.out.print(array[i]+",");
		}
		System.out.println();
		insertion_sort(array);
		long end=System.nanoTime(); 
		System.out.println("Runs "+(end-start)+" ns");
		for(int j = 0;j < array.length;j++){
			System.out.print(array[j]+",");
		}
	}
	
	public static void insertion_sort(int array[]){
		for(int j = 1;j < array.length;j++){
			int key = array[j];
			int i = j-1;
			while((i >= 0)&&(array[i]>key)){
				array[i+1] = array[i];
				i--;
			}
			array[i+1] = key;
		}
	}
}
